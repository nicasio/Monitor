input {
    file {
         type => "honeypots"
         path => ["/var/log/honeypots*.log"  ]
         start_position => "beginning"
    }
}

input {
    file {
         type => "commands"
         path => ["/var/log/commands*.log"  ]
         start_position => "beginning"
    }
}

input {
    file {
         type => "mysqlsniffer"
         path => ["/var/log/mysqlsniffer*.log"  ]
         start_position => "beginning"
    }
}

input {
    file {
         type => "mysqlplugin"
         path => ["/var/log/mysqlplugin*.log"  ]
         start_position => "beginning"
    }
}

input {
    file {
         type => "mongo"
         path => ["/var/log/mongo*.log"  ]
         start_position => "beginning"
    }
}


filter {
        if [type] == "mysqlsniffer"  {
                grok {
                    pattern => "%{SYSLOGTIMESTAMP:date} %{GREEDYDATA:output}"
                }
        }
        date { match => [ "date", "MMM  dd HH:mm:ss", "MMM dd HH:mm:ss"  ] }
}

filter {
        if [type] == "mysqlplugin"  {
                grok {
                    pattern => '%{SYSLOGTIMESTAMP:date} %{HOST:agent} %{GREEDYDATA:output}"user":"%{USERNAME:user}%{GREEDYDATA:output}priv_user":"%{USERNAME:priv_user}%{GREEDYDATA:output}ip":"%{HOST:srcip}",%{GREEDYDATA:output}cmd":"%{GREEDYDATA:command}","objects":%{GREEDYDATA:objects},"query":"%{GREEDYDATA:query}"}'
                    pattern => '%{SYSLOGTIMESTAMP:date} %{HOST:agent} %{GREEDYDATA:output}"user":"%{USERNAME:user}%{GREEDYDATA:output},"priv_user":"%{USERNAME:priv_user}%{GREEDYDATA:output},"ip":"%{HOST:srcip}",%{GREEDYDATA:output},"cmd":"%{GREEDYDATA:command}","query":"%{GREEDYDATA:query}"}'
                    pattern => "%{SYSLOGTIMESTAMP:date} %{GREEDYDATA:output}"
                }
        }
        date { match => [ "date", "MMM  dd HH:mm:ss", "MMM dd HH:mm:ss"  ] }
}

filter {
        if [type] == "mongo"  {
                grok {
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:agent} ,%{WORD:cluster},%{HOST:server},%{DATA:username},%{DATA:schema},%{HOST:srcip}:%{NUMBER:srcport},%{HOST:dstip}:%{NUMBER:port},%{DATA},%{DATA},%{WORD:qtype},%{GREEDYDATA:output}" 
                    pattern => "%{SYSLOGTIMESTAMP:date} %{GREEDYDATA:output}"
                }
        }
        date { match => [ "date", "MMM  dd HH:mm:ss", "MMM dd HH:mm:ss"  ] }
}

filter {
        if [type] == "honeypots"  {
                grok {
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:honeypot} %{GREEDYDATA:output} HoneyPotTransport,%{NUMBER},%{HOST:attacker}\] login attempt \[%{USER:username}/%{DATA:password}\] %{GREEDYDATA:output}"
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:honeypot} %{GREEDYDATA:output}"
                }
            geoip {
                source => "attacker"
                target => "src_geo"
                fields => ["country_code2"]
            }
        }
        date { match => [ "date", "MMM  dd HH:mm:ss", "MMM dd HH:mm:ss"  ] }
}


filter {
        if [type] == "commands"  {
                grok {
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:xhost} - CheckCommands > RealUser: %{USER:realuser} - User: %{USER:user}\[%{GREEDYDATA}] %{GREEDYDATA} - Command: %{GREEDYDATA:command}"
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:xhost} - CheckCommands > RealUser: %{USER:realuser} - User: %{USER:user}\[%{GREEDYDATA}] %{GREEDYDATA} - Command: %{GREEDYDATA:command}"
                    pattern => "%{SYSLOGTIMESTAMP:date} %{HOST:xhost} %{GREEDYDATA:output}"
                    pattern => "%{SYSLOGTIMESTAMP:date} %{GREEDYDATA:output}"
                }
        }
        date { match => [ "date", "MMM  dd HH:mm:ss", "MMM dd HH:mm:ss"  ] }
}



filter {
    metrics {
      meter => "events"
      add_tag => "metric"
      type => "metric"
    }
}

output{
    elasticsearch_http
    {
      index => "logstash-%{+yyyy-MM-dd}-%{type}"
      host => "54.187.68.209"
      workers => 20
    }
    
    if "metric" in [tags] {
      stdout {
        codec => rubydebug 
      }
    }
}
